local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- ðŸŒŸ Window
local Window = Rayfield:CreateWindow({
    Name = "RCE | Rayfield",
    Icon = 100729310939881,
    LoadingTitle = "Loading",
    LoadingSubtitle = "By RCE",
    ShowText = "Rayfield",
    Theme = "AmberGlow",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = { Enabled = true, FolderName = nil, FileName = "Big Hub" },
    Discord = { Enabled = true, Invite = "ddHwwgMB", RememberJoins = true },
    KeySystem = true,
    KeySettings = {
        Title = "RCE",
        Subtitle = "Key System",
        Note = "Join our discord for a one time code! [ May change often. ]",
        FileName = "IvagJgaweT",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"CurrentlyNew"}
    }
})

-- ðŸ“‚ Tabs
local InfoTab = Window:CreateTab("Info", 100729310939881)
local UniversalTab = Window:CreateTab("Universal", 100729310939881)
local TestTab = Window:CreateTab("Executables", 100729310939881)

-- ðŸ›ˆ INFO TAB
InfoTab:CreateSection("About")
InfoTab:CreateLabel("RCE Dev Panel - Version: 1.2.0")
InfoTab:CreateLabel("Created by: RCE Developers")
InfoTab:CreateLabel("Powered by: Rayfield UI Library")
InfoTab:CreateLabel("Discord: https://discord.gg/ddHwwgMB")
InfoTab:CreateParagraph({Title = "Description", Content = "Local dev panel for testing, building, and fun Roblox features."})
InfoTab:CreateParagraph({Title = "Changelog", Content = [[
v1.2.0:
- Added Executables
- Added DeathTP
- Added Player ESP / Highlight
- Cleaned up UI and merged Fun/Randomness features
]]})
InfoTab:CreateButton({Name = "Copy Discord Invite", Callback = function() if setclipboard then setclipboard("https://discord.gg/DdPYGZFA") end end})
InfoTab:CreateButton({Name = "Copy Staff Team Email", Callback = function() if setclipboard then setclipboard("rcestaffteam@gmail.com") end end})
InfoTab:CreateButton({Name = "Print System Info", Callback = function()
    local player = game.Players.LocalPlayer
    print("Username:", player.Name)
    print("Display Name:", player.DisplayName)
    print("UserId:", player.UserId)
    print("Game Name:", game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
    print("PlaceId:", game.PlaceId)
    print("JobId:", game.JobId)
end})

-- ðŸŽ¬ UNIVERSAL TAB
UniversalTab:CreateSection("Movement & Dev Tools")

-- WalkSpeed & JumpPower
UniversalTab:CreateSlider({Name = "WalkSpeed", Range = {16,200}, Increment = 1, Suffix = "Speed", CurrentValue = 16, Flag = "WalkSpeedSlider", Callback = function(Value)
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then char.Humanoid.WalkSpeed = Value end
end})
UniversalTab:CreateSlider({Name = "JumpPower", Range = {50,500}, Increment = 5, Suffix = "Power", CurrentValue = 50, Flag = "JumpPowerSlider", Callback = function(Value)
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then char.Humanoid.JumpPower = Value end
end})

-- Noclip
UniversalTab:CreateToggle({Name = "Noclip (Walk Through Walls)", CurrentValue = false, Flag = "NoclipToggle", Callback = function(Value)
    local char = game.Players.LocalPlayer.Character
    if Value then
        _G.NoclipLoop = game:GetService("RunService").Stepped:Connect(function()
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then part.CanCollide = false end
            end
        end)
    else
        if _G.NoclipLoop then _G.NoclipLoop:Disconnect() end
    end
end})

-- Reset Character & Teleport Up
UniversalTab:CreateButton({Name = "Reset Character", Callback = function() game.Players.LocalPlayer.Character:BreakJoints() end})
UniversalTab:CreateButton({Name = "Teleport Up", Callback = function()
    local root = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    root.CFrame = root.CFrame + Vector3.new(0,50,0)
end})

-- God Mode
UniversalTab:CreateButton({Name = "God Mode (Humanoid)", Callback = function()
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then
        char.Humanoid.Name = "1"
        local clone = char.Humanoid:Clone()
        clone.Parent = char
        wait()
        char["1"]:Destroy()
        clone.Name = "Humanoid"
    end
end})

-- Fly
UniversalTab:CreateToggle({Name = "Fly (Hold Space)", CurrentValue = false, Flag = "FlyToggle", Callback = function(Value)
    local player = game.Players.LocalPlayer
    local char = player.Character or player.CharacterAdded:Wait()
    local uis = game:GetService("UserInputService")
    local rs = game:GetService("RunService")
    local root = char:WaitForChild("HumanoidRootPart")

    if Value then
        _G.Fly = true
        local bv = Instance.new("BodyVelocity")
        bv.Velocity = Vector3.new(0,0,0)
        bv.MaxForce = Vector3.new(0,0,0)
        bv.Parent = root

        _G.FlyConn = rs.RenderStepped:Connect(function()
            if uis:IsKeyDown(Enum.KeyCode.Space) then
                bv.MaxForce = Vector3.new(4000,4000,4000)
                bv.Velocity = root.CFrame.UpVector * 50
            else
                bv.MaxForce = Vector3.new(0,0,0)
            end
        end)
    else
        _G.Fly = false
        if _G.FlyConn then _G.FlyConn:Disconnect() end
        local bv = root:FindFirstChildOfClass("BodyVelocity")
        if bv then bv:Destroy() end
    end
end})

-- Infinite Jump
UniversalTab:CreateToggle({Name = "Infinite Jump", CurrentValue = false, Flag = "InfJumpToggle", Callback = function(Value)
    local uis = game:GetService("UserInputService")
    if Value then
        _G.InfJump = uis.JumpRequest:Connect(function()
            local char = game.Players.LocalPlayer.Character
            if char and char:FindFirstChildOfClass("Humanoid") then
                char:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
            end
        end)
    else
        if _G.InfJump then _G.InfJump:Disconnect() end
    end
end})

-- Sit Anywhere & Rejoin
UniversalTab:CreateButton({Name = "Sit Anywhere", Callback = function()
    local hum = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if hum then hum.Sit = true end
end})
UniversalTab:CreateButton({Name = "Rejoin Server", Callback = function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
end})

-- ðŸŽ¯ Playground Fun Features
UniversalTab:CreateButton({Name = "Spawn Ball", Callback = function()
    local ball = Instance.new("Part")
    ball.Shape = Enum.PartType.Ball
    ball.Size = Vector3.new(3,3,3)
    ball.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,5,0)
    ball.Anchored = false
    ball.Material = Enum.Material.Neon
    ball.Color = Color3.fromRGB(0,255,255)
    ball.Parent = workspace
end})
UniversalTab:CreateButton({Name = "Spawn Platform", Callback = function()
    local player = game.Players.LocalPlayer
    local char = player.Character or player.CharacterAdded:Wait()
    local rootPart = char:WaitForChild("HumanoidRootPart")

    local platform = Instance.new("Part")
    platform.Name = "CustomPlatform"
    platform.Size = Vector3.new(6,1,6)
    platform.Position = rootPart.Position - Vector3.new(0,(rootPart.Size.Y/2) + (platform.Size.Y/2),0)
    platform.Anchored = true
    platform.Color = Color3.fromRGB(255,200,50)
    platform.Material = Enum.Material.Neon
    platform.TopSurface = Enum.SurfaceType.Smooth
    platform.BottomSurface = Enum.SurfaceType.Smooth
    platform.Parent = workspace
end})
UniversalTab:CreateButton({Name = "Launch Into Space", Callback = function()
    local rootPart = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    rootPart.Velocity = Vector3.new(0,200,0)
end})

-- Rainbow Character
UniversalTab:CreateToggle({Name = "Rainbow Character", CurrentValue = false, Flag = "RainbowCharToggle", Callback = function(Value)
    if Value then
        _G.RainbowLoop = game:GetService("RunService").RenderStepped:Connect(function()
            for _, part in ipairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                end
            end
        end)
    else
        if _G.RainbowLoop then _G.RainbowLoop:Disconnect() end
    end
end})

-- âœ… DeathTP with respawn-safe handling
local lastPosition = nil
local DeathTPEnabled = false
local deathConn

-- Track last position
game:GetService("RunService").Stepped:Connect(function()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        lastPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    end
end)

local function connectDeath()
    local player = game.Players.LocalPlayer
    if not player.Character then return end
    local hum = player.Character:FindFirstChildOfClass("Humanoid")
    if hum then
        if deathConn then deathConn:Disconnect() end
        deathConn = hum.Died:Connect(function()
            wait(0.5)
            if DeathTPEnabled and lastPosition then
                local char = player.Character or player.CharacterAdded:Wait()
                local hrp = char:WaitForChild("HumanoidRootPart")
                hrp.CFrame = lastPosition
                print("Teleported back to last position!")
            end
        end)
    end
end

game.Players.LocalPlayer.CharacterAdded:Connect(function()
    if DeathTPEnabled then
        connectDeath()
    end
end)

UniversalTab:CreateToggle({
    Name = "DeathTP",
    CurrentValue = false,
    Flag = "DeathTPToggle",
    Callback = function(Value)
        DeathTPEnabled = Value
        if Value then
            connectDeath()
        else
            if deathConn then deathConn:Disconnect() end
        end
    end
})

-- ðŸŒŸ Player ESP / Highlight
local ESPEnabled = false
local ESPConnections = {}

UniversalTab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Flag = "ESP",
    Callback = function(Value)
        ESPEnabled = Value
        -- Disconnect previous ESP
        for _, conn in pairs(ESPConnections) do
            if conn.Highlight then conn.Highlight:Destroy() end
            if conn.TextLabel then conn.TextLabel:Destroy() end
            if conn.Connection then conn.Connection:Disconnect() end
        end
        ESPConnections = {}

        if ESPEnabled then
            for _, plr in pairs(game.Players:GetPlayers()) do
                if plr ~= game.Players.LocalPlayer then
                    local char = plr.Character or plr.CharacterAdded:Wait()
                    local hrp = char:WaitForChild("HumanoidRootPart")
                    local hum = char:FindFirstChildOfClass("Humanoid")
                    
                    -- Highlight
                    local highlight = Instance.new("Highlight")
                    highlight.Adornee = char
                    highlight.FillColor = Color3.fromRGB(255,0,0)
                    highlight.OutlineColor = Color3.fromRGB(255,255,255)
                    highlight.Parent = char

                    -- BillboardGui
                    local billboard = Instance.new("BillboardGui")
                    billboard.Size = UDim2.new(0,120,0,50)
                    billboard.Adornee = hrp
                    billboard.AlwaysOnTop = true
                    billboard.StudsOffset = Vector3.new(0, 3, 0) -- â†‘ 3 studs above the head
                    local label = Instance.new("TextLabel")
                    label.Size = UDim2.new(1,0,1,0)
                    label.BackgroundTransparency = 1
                    label.TextScaled = true
                    label.TextColor3 = Color3.fromRGB(255,255,255)
                    label.TextStrokeTransparency = 0.5
                    label.Parent = billboard
                    billboard.Parent = game.CoreGui

                    -- Update text every frame
                    local conn
                    conn = game:GetService("RunService").RenderStepped:Connect(function()
                        if not char or not hrp or not hum then return end
                        label.Text = string.format("%s\nHP: %d\n%.1f studs", plr.Name, hum.Health, (hrp.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
                    end)
                    table.insert(ESPConnections, {Highlight=highlight, TextLabel=label, Connection=conn})
                end
            end
        end
    end
})

-- ðŸ“‚ Test Objects Tab
TestTab:CreateSection("List")
TestTab:CreateButton({Name = "Infinite Yield", Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkNetworks/Infinite-Yield/main/latest.lua'))()
end})


-- WHITELISTED GAMES (Own Tabs)
local currentPlaceId = game.PlaceId

if currentPlaceId == 17574618959 then
    local BaseplateTab = Window:CreateTab("Just a Baseplate", 100729310939881)
    BaseplateTab:CreateButton({Name = "Button for Just a Baseplate", Callback = function()
        print("You are in Just a Baseplate!")
    end})
elseif currentPlaceId == 12341234 then
    local Section123Tab = Window:CreateTab("Section 12341234", 100729310939881)
    Section123Tab:CreateButton({Name = "Button for Section 12341234", Callback = function()
        print("You are in Section 12341234!")
    end})
elseif currentPlaceId == 141356 then
    local Section141Tab = Window:CreateTab("Section 141356", 100729310939881)
    Section141Tab:CreateButton({Name = "Button for Section 141356", Callback = function()
        print("You are in Section 141356!")
    end})
else
    local NotAllowedTab = Window:CreateTab("Not an allowed game", 100729310939881)
    NotAllowedTab:CreateButton({Name = "Info", Callback = function()
        print("This game is not whitelisted!")
    end})
end
